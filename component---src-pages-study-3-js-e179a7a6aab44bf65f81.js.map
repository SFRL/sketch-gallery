{"version":3,"file":"component---src-pages-study-3-js-e179a7a6aab44bf65f81.js","mappings":"kKA+BA,MAtBc,IAAgD,IAA/C,UAAEA,EAAS,oBAAEC,EAAmB,MAAEC,GAAO,EACtD,OACE,uBAAKC,UAAS,UAAWH,EAAY,iBAAcI,IACjD,uBACED,UAAU,mBACVE,QAAS,IAAMJ,GAAoB,KAErC,uBAAKE,UAAU,iBACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,SAASH,EAAUM,KAClC,2BACA,yBAAG,iBAAiB,IAAEN,EAAUO,cAChC,2BACA,yBAAG,WACFP,EAAUQ,QACX,2BAAMN,EAtBSA,IACvB,yBAAOO,UAAQ,GACf,0BAAQC,IAAKR,EAAOS,KAAK,eAAc,oDAoBjBC,CAAgBV,QAASE,KAGvC,ECgDV,MAhBgB,IAA8B,IAA7B,KAAES,EAAI,MAAEC,EAAK,OAAEC,GAAQ,EAEtC,MAAM,EAACf,EAAU,EAACgB,IAAgBC,EAAAA,EAAAA,WAAS,GAErCC,GAAgBC,EAAAA,EAAAA,cAAaC,IACjCJ,EAAaI,EAAO,GACnB,IAEH,OACE,gCACE,gBAAC,EAAK,CAACpB,UAAWA,EAAWE,MAAOF,GAAWe,EAAOA,EAAOf,EAAUQ,cAASJ,EAAWH,oBAAqBiB,IAvD3F,EAACL,EAAMC,EAAOI,KACnC,IAAIG,EAAU,EAId,OAFAC,QAAQC,IAAI,YAAYT,GACpBA,GAAOD,EAAKW,MAAK,CAACC,EAAGC,IAfV,EAACD,EAAGC,IACfD,EAAIC,GACE,EAEND,EAAIC,EACC,EAGF,EAOwBC,CAASF,EAAEX,GAAQY,EAAEZ,MAElD,gCACG,IACAD,EAAKe,KAAI,CAACR,EAAQS,KAEjB,IAAIC,EAAS,GACb,GAAIhB,IAAgB,IAANe,GAAWT,EAAON,KAAWD,EAAKgB,EAAI,GAAGf,IAAS,CAC9D,MAAMiB,EAAeF,EACnB,uBAAK1B,UAAU,iBAAiB6B,IAAG,SAAWH,IAE9C,GAEFC,EACE,gCACGC,EACD,uBAAK5B,UAAU,cAAc6B,IAAG,UAAYH,GAC1C,uBAAK1B,UAAU,qBAA+B,YAAVW,EAAsBM,EAAOZ,QAAUa,KAIjFA,GACF,CAEA,OACE,gCACGS,EACD,uBACEE,IAAG,MAAQH,EACX1B,UAAU,cACVE,QAAS,IAAMa,EAAcE,IAE7B,uBAAKjB,UAAU,oBAAoBiB,EAAOd,MAE3C,IAGN,EAeJ2B,CAAepB,EAAMC,EAAOI,GAC5B,C,wEC1BP,UAxCe,KACb,MAAM,EAACJ,EAAM,EAACoB,IAAYjB,EAAAA,EAAAA,UAAS,IAC7BkB,EAAeC,GAAMF,EAASE,EAAEC,OAAOC,OAE7C,OACE,gBAAC,IAAM,KACL,2BAASnC,UAAU,WACjB,sBAAIoC,MAAM,SAAQ,YAEpB,2BAASpC,UAAU,WACjB,uBAAKoC,MAAM,WACT,yBAAOA,MAAM,SACX,yBACE5B,KAAK,QACL6B,KAAK,SACLF,MAAM,UACNG,SAAUN,IACV,SAGJ,yBAAOI,MAAM,SACX,yBACE5B,KAAK,QACL6B,KAAK,SACLF,MAAM,gBACNG,SAAUN,IACV,kBAKR,2BAAShC,UAAU,WACjB,uBAAKA,UAAU,wBACb,gBAAC,IAAO,CAACU,KAAMA,EAAAA,EAAMC,MAAOA,MAGzB,C","sources":["webpack://sketch-gallery/./src/components/modal.js","webpack://sketch-gallery/./src/components/svgGrid.js","webpack://sketch-gallery/./src/pages/study3.js"],"sourcesContent":["import React from \"react\"\n\nconst getAudioElement = (sound) => (\n  <audio controls>\n  <source src={sound} type=\"audio/mpeg\"/>\n  Your browser does not support the audio element.\n</audio>\n)\n\nconst Modal = ({ svgObject, changeModalCallback, sound }) => {\n  return (\n    <div className={`modal ${svgObject ? \"is-active\" : undefined}`}>\n      <div\n        className=\"modal-background\"\n        onClick={() => changeModalCallback(false)}\n      ></div>\n      <div className=\"modal-content\">\n        <div className=\"box\">\n          <div className=\"image\">{svgObject.svg}</div>\n          <hr />\n          <b>Participant: </b> {svgObject.participantID}\n          <br />\n          <b>Sound: </b>\n          {svgObject.soundID}\n          <div>{sound ? getAudioElement(sound) : undefined}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal\n","import React, {useState, useCallback} from \"react\";\nimport Modal from \"../components/modal\";\n\n    const sortSvgs = (a, b) => {\n      if (a < b) {\n        return -1;\n      }\n      if (a > b) {\n        return 1;\n      }\n      // names must be equal\n      return 0;\n    };\n\n    const getSvgElements = (svgs, order, activateModel) => {\n      let counter = 1;\n      // Sort svgs according to state\n      console.log(`order is ${order}`)\n      if (order) svgs.sort((a, b) => sortSvgs(a[order], b[order]));\n      return (\n        <>\n          {\" \"}\n          {svgs.map((object, i) => {\n            // Mark beginning of new participant or sound\n            let marker = \"\";\n            if (order && (i === 0 || object[order] !== svgs[i - 1][order])) {\n              const breakElement = i ? (\n                <div className=\"column is-full\" key={`break_${i}`}></div>\n              ) : (\n                \"\"\n              );\n              marker = (\n                <>\n                  {breakElement}\n                  <div className=\"column is-1\" key={`marker_${i}`}>\n                    <div className=\"box is-shadowless\">{order === \"soundID\" ? object.soundID : counter}</div>\n                  </div>\n                </>\n              );\n              counter++;\n            }\n\n            return (\n              <>\n                {marker}\n                <div\n                  key={`svg${i}`}\n                  className=\"column is-1\"\n                  onClick={() => activateModel(object)}\n                >\n                  <div className=\"box is-clickable\">{object.svg}</div>\n                </div>\n              </>\n            );\n          })}\n        </>\n      );\n    };\n\nconst SvgGrid = ({ svgs, order, sounds }) => {\n  \n  const [svgObject, setSvgObject] = useState(false);\n\n  const activateModel = useCallback((object) => {\n    setSvgObject(object);\n  }, []);\n  \n  return (\n    <>\n      <Modal svgObject={svgObject} sound={svgObject&&sounds?sounds[svgObject.soundID]:undefined} changeModalCallback={activateModel}/> \n      {getSvgElements(svgs, order, activateModel)}\n    </>\n  )\n};\n\nexport default SvgGrid;","import React, { useState } from \"react\";\nimport Layout from \"../components/layout\";\nimport SvgGrid from \"../components/svgGrid\";\nimport svgs from \"../svgs/study3Import\";\n\nconst Study3 = () => {\n  const [order, setOrder] = useState(\"\");\n  const changeOrder = (e) => setOrder(e.target.value);\n\n  return (\n    <Layout>\n      <section className=\"section\">\n        <h1 class=\"title\">Study 3</h1>\n      </section>\n      <section className=\"section\">\n        <div class=\"control\">\n          <label class=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"answer\"\n              value=\"soundID\"\n              onChange={changeOrder}\n            />\n            Sound\n          </label>\n          <label class=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"answer\"\n              value=\"participantID\"\n              onChange={changeOrder}\n            />\n            Participants\n          </label>\n        </div>\n      </section>\n      <section className=\"section\">\n        <div className=\"columns is-multiline\">\n          <SvgGrid svgs={svgs} order={order} />\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Study3;\n"],"names":["svgObject","changeModalCallback","sound","className","undefined","onClick","svg","participantID","soundID","controls","src","type","getAudioElement","svgs","order","sounds","setSvgObject","useState","activateModel","useCallback","object","counter","console","log","sort","a","b","sortSvgs","map","i","marker","breakElement","key","getSvgElements","setOrder","changeOrder","e","target","value","class","name","onChange"],"sourceRoot":""}